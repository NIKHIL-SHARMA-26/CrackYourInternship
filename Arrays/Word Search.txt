https://leetcode.com/problems/word-search/description/
class Solution {
public:
   
 bool solve(vector<vector<char>>&board, string word, int i, int j, int n, int m, int idx){
           if(idx == word.size())return true;
        if(i<0 || j<0 || i>=n || j>=m || board[i][j]!=word[idx] || board[i][j]=='1')return false;
           int ch = board[i][j];
           board[i][j] = '1';

           vector<int>dir = {0,1,0,-1,0};
           for(int k=0;k<4;k++){
               int x = i + dir[k];
               int y = j + dir[k+1];
               if(solve(board,word,x,y,n,m,idx+1)){
                board[i][j]=ch;
               return true;
               }
           }
           board[i][j]=ch;
           return false;
   }
  
 bool exist(vector<vector<char>>& board, string word) {
           int n = board.size();
           int m = board[0].size();
           for(int i=0;i<n;i++){
               for(int j=0;j<m;j++){
                if(board[i][j] != word[0]) continue;
               if(solve(board,word,i,j,n,m,0)) return true;
           }
        }
           return false;
    }
};