 https://leetcode.com/problems/game-of-life/description/
without space
class Solution {
public:
     int x[8]={1,-1,0,0,1,-1,-1,1};
     int y[8]={0,0,1,-1,1,1,-1,-1};
    void update(vector<vector<int>>& board, int n, int m, int i, int j){
            int total_one=0;
            for(int k=0;k<8;k++){
              int dx = i+x[k];
              int dy = j+y[k];
                if( dx>=0 && dy>=0 && dx<n && dy<m)
                   if(board[dx][dy]!=-2)
                  total_one+=abs(board[dx][dy]);
              }
                  if(board[i][j]==0){
                     if(total_one==3)board[i][j]=-2;
                  }
                  else{
                      if(total_one < 2 || total_one>3)board[i][j]=-1;
                  }
    }

    void gameOfLife(vector<vector<int>>& board) {
        
          int n = board.size();
          int m = board[0].size();
         vector<vector<int>> ans(n,vector<int>(m));
         
          for(int i=0;i<n;i++){
             for(int j=0;j<m;j++){
                 update(board,n,m,i,j);
             } 
          }
         for(int i=0;i<n;i++){
             for(int j=0;j<m;j++){
                if(board[i][j]==-2)board[i][j]=1;
                if(board[i][j]==-1)board[i][j]=0;
             } 
          }


          
    }
};

 
using space
class Solution {
public:
     int x[8]={1,-1,0,0,1,-1,-1,1};
     int y[8]={0,0,1,-1,1,1,-1,-1};
    int get(vector<vector<int>>& board, int n, int m, int i, int j){
            int cnt=0;
            for(int k=0;k<8;k++){
              int dx = i+x[k];
              int dy = j+y[k];
                if( dx>=0 && dy>=0 && dx<n && dy<m)
                  cnt+=board[dx][dy];
            }
            return cnt;
    }

    void gameOfLife(vector<vector<int>>& board) {
        
          int n = board.size();
          int m = board[0].size();
         vector<vector<int>> ans(n,vector<int>(m));
         
          for(int i=0;i<n;i++){
             for(int j=0;j<m;j++){
                 int total_one =  get(board,n,m,i,j);
                  if(board[i][j]==0){
                     if(total_one==3)ans[i][j]=1;
                  }
                  else{
                      if(total_one ==2 || total_one==3)ans[i][j]=1;
                  }
             } 
          }
          board = ans;
    }
};