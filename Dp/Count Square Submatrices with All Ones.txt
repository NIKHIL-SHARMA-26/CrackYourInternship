https://leetcode.com/problems/count-square-submatrices-with-all-ones/description/
class Solution {
public:
    int countSquares(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
          vector<vector<int>>dp(n+1,vector<int>(m+1));
           int ans = 0;

          for(int i=1;i<=n;i++){
              for(int j=1;j<=m;j++){
                    if(matrix[i-1][j-1])
                  ans += dp[i][j] = min({dp[i-1][j],dp[i][j-1],dp[i-1][j-1]}) + 1;
              }
          }

        //   for(int i=0;i<n;i++){
        //    dp[i][0] = matrix[i][0];
        //    ans += dp[i][0];
           
        //   }
        //   for(int i=1;i<m;i++){
        //       dp[0][i] = matrix[0][i];
        //       ans += dp[0][i];
        //   }
    
        //   for(int i=1;i<n;i++){
        //       for(int j=1;j<m;j++){
        //             if(matrix[i][j]!=0)
        //           dp[i][j] = min({dp[i-1][j],dp[i][j-1],dp[i-1][j-1]}) + 1;
        //           ans += dp[i][j];
        //       }
        //   }
        return ans;
    }
};