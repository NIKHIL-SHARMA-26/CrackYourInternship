https://leetcode.com/problems/minimum-cost-to-hire-k-workers/
class Solution {
public:
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int k) {
          int n = wage.size();
         vector<pair<double,int>>emp;
         for(int i=0;i<n;i++){
           emp.push_back({(double)wage[i]/quality[i],quality[i]});
         }
         sort(emp.begin(),emp.end());
         
         double ans=DBL_MAX;
         
         priority_queue<int>pq;
         double tq=0;
         for(int i=0;i<n;i++){
             tq += emp[i].second;
             pq.push(emp[i].second);
             if(pq.size()>k){
               tq-=pq.top();
               pq.pop();
             }
             if(pq.size()==k){
                 ans = min(ans,tq*emp[i].first);
             }
         }
       return ans;
    }
};