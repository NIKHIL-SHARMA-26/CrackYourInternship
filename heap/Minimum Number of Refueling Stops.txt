https://leetcode.com/problems/minimum-number-of-refueling-stops/
class Solution {
public:
    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {
            int n = stations.size();
            
            // using heap 
            priority_queue<int>pq;
            int ans=0;
            int fuel = startFuel;
            int idx=0;
            while(fuel<target){
                 while(idx<n && fuel>=stations[idx][0]){
                     pq.push(stations[idx][1]);
                     idx++;
                 }
                 if(pq.empty())return -1;
                 fuel += pq.top();
                  pq.pop();    
                 ans++;
            }
            return ans;
            
            // using dp 
            //   vector<long long>dp(n+1);
            // dp[0] = startFuel;
             
            //  for(int i=1;i<=n;i++){
            //       for(int j=i-1;j>=0;j--){
            //            if(dp[j]>=stations[i-1][0]){
            //                dp[j+1] = max(dp[j+1], dp[j]+stations[i-1][1]);
            //            }
            //       }
            //  }
            //  for(int i=0;i<=n;i++){
            //       if(dp[i]>=target)return i;
            //  }
            //  return -1;
    }
};